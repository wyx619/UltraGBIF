% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/make_digital_voucher.R
\name{make_digital_voucher}
\alias{make_digital_voucher}
\title{(Step 5) Make the master digital voucher}
\usage{
make_digital_voucher(
  occ_import = NA,
  names.checked = NA,
  collection_key = NA,
  threads = 4
)
}
\arguments{
\item{occ_import}{imported GBIF occurrence data from step1}

\item{names.checked}{your checked species names from step2}

\item{collection_key}{your collection mark from step4}

\item{threads}{your threads requirement, a number >0. Default=4}
}
\value{
A list with duration and  2 data.table:
"occ_digital_voucher" for all data processing fields and "occ_results" for only result fields.
}
\description{
\subsection{Grouping Duplicates and Selecting the Digital Voucher}{
\subsection{1. Handling Complete Collection Event Keys}{
\itemize{
\item Unique collection events often generate multiple duplicate GBIF records. One duplicate is designated as the master digital voucher, integrating data from other duplicates.
\item When the collection event key is complete, duplicates are grouped and parsed based on record completeness and geospatial quality:
\itemize{
\item \emph{Record Completeness} : Assessed using data-quality scores for fields: \code{recordedBy}, \code{recordNumber}, \code{year}, \code{institutionCode}, \code{catalogNumber}, \code{locality}, \code{municipality}, \code{countryCode}, \code{stateProvince}, and \code{fieldNotes}.
\item \emph{Geospatial Quality} : Ranked via a score derived from geospatial issues in \code{EnumOccurrenceIssue} (GBIF table).
}
\item The duplicate with the highest total score (sum of record completeness + geospatial quality) is assigned as the master voucher. Missing data from other duplicates are merged into this voucher.
}
}

\subsection{2. Handling Incomplete Collection Event Keys}{
\itemize{
\item When the collection event key is incomplete, duplicates cannot be parsed. Each record is treated as a unique collection event, with no duplicates identified.
\item Record completeness and geospatial quality are still evaluated as described below to assess data integrity.
}
}

\subsection{3. Quality Score Calculation}{

\strong{UltraGBIF_digital_voucher} : The duplicate with the highest total score, calculated as
}

}

\subsection{Total Score = Record Completeness + Quality of Geospatial Information}{
\subsection{4. Record Completeness Calculation}{
\itemize{
\item Measured as the sum of binary flags (TRUE = 1, FALSE = 0) for the following fields:
\itemize{
\item Is \code{recordedBy} present?
\item Is \code{recordNumber} present?
\item Is \code{year} present?
\item Is \code{institutionCode} present?
\item Is \code{catalogNumber} present?
\item Is \code{locality} present?
\item Is \code{municipality} present?
\item Is \code{countryCode} present?
\item Is \code{stateProvince} present?
\item Is \code{fieldNotes} present?
}
}
}

\subsection{5. Geospatial Quality Calculation}{
\itemize{
\item Based on GBIF geospatial issues in \code{EnumOccurrenceIssue}, classified into three categories:
\itemize{
\item \emph{No Impact} : Issues not affecting coordinate accuracy (\code{selection_score = -1}).
\item \emph{Potential Impact} : Issues that may affect coordinate accuracy (\code{selection_score = -3}).
\item \emph{Exclusion} : Records with severe issues (\code{selection_score = -9}) are excluded.
}
}

\strong{This structured approach ensures systematic grouping of duplicates and selection of the master digital voucher without altering the original logic or variables.}
}

}
}
\details{
\code{UltraGBIF_duplicates_grouping_status} :
\itemize{
\item \code{groupable}: Complete key, duplicates parsed.
\item \verb{not groupable: no recordedBy and no recordNumber}: Missing both fields.
\item \verb{not groupable: no recordNumber}: Missing recordNumber.
\item \verb{not groupable: no recordedBy}: Missing recordedBy.
}

\code{UltraGBIF_num_duplicates}: Integer count of duplicate records.

\code{UltraGBIF_duplicates}: TRUE if duplicates exist, FALSE otherwise.

\code{UltraGBIF_non_groupable_duplicates}: TRUE if duplicates cannot be grouped, FALSE otherwise.
}
\examples{
\donttest{
help(make_digital_voucher)
}
}
